<?php

/**
 * This is the model base class for the table "gif_dictionary".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "GifDictionary".
 *
 * Columns in table "gif_dictionary" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $name
 * @property string $brand
 * @property string $model
 * @property string $quantity
 * @property string $created_at
 * @property string $updated_at
 * @property string $user_update_id
 *
 */
abstract class BaseGifDictionary extends GxActiveRecord {

	public $created_log_field = 'created_at';

	public $updated_log_field = 'updated_at';

	public $user_update_log_field = 'user_update_id';
	

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'gif_dictionary';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'GifDictionary|GifDictionaries', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, brand, model', 'required'),
			array('name, brand, model', 'length', 'max'=>200),
			array('quantity', 'length', 'max'=>20),
			array('user_update_id', 'length', 'max'=>10),
			array('created_at, updated_at', 'safe'),
			array('quantity, created_at, updated_at, user_update_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, brand, model, quantity, created_at, updated_at, user_update_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'brand' => Yii::t('app', 'Brand'),
			'model' => Yii::t('app', 'Model'),
			'quantity' => Yii::t('app', 'Quantity'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'user_update_id' => Yii::t('app', 'User Update'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('brand', $this->brand, true);
		$criteria->compare('model', $this->model, true);
		$criteria->compare('quantity', $this->quantity, true);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);
		$criteria->compare('user_update_id', $this->user_update_id, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

	/**
	*	Autolog some fields if exists
	*
	*
	*/
	public function behaviors()
	{
    	return array(
        	'AutoLogBehavior' => array(
            	'class' => 'application.components.AutoLogBehavior',
            	//You can optionally set the field name options here
        	)
    	);
	}
}