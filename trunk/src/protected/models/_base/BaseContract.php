<?php

/**
 * This is the model base class for the table "contract".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Contract".
 *
 * Columns in table "contract" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $seller_name
 * @property integer $seller_dni
 * @property string $point_of_sale_address
 * @property string $employee_identification
 * @property integer $device_imei
 * @property string $device_brand
 * @property string $device_model
 * @property integer $device_price
 * @property string $device_status_id
 * @property integer $afip_cai
 * @property integer $afip_cae
 * @property string $pdf_uri
 * @property string $created_at
 * @property string $updated_at
 * @property string $user_update_id
 *
 */
abstract class BaseContract extends GxActiveRecord {

	public $created_log_field = 'created_at';

	public $updated_log_field = 'updated_at';

	public $user_update_log_field = 'user_update_id';
	

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'contract';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Contract|Contracts', $n);
	}

	public static function representingColumn() {
		return 'seller_name';
	}

	public function rules() {
		return array(
			array('seller_name, seller_dni, point_of_sale_address, device_imei, device_brand, device_model, device_price, device_status_id, afip_cai, afip_cae, pdf_uri', 'required'),
			array('seller_dni, device_imei, device_price, afip_cai, afip_cae', 'numerical', 'integerOnly'=>true),
			array('seller_name, point_of_sale_address, device_brand, device_model, pdf_uri', 'length', 'max'=>255),
			array('employee_identification', 'length', 'max'=>20),
			array('device_status_id, user_update_id', 'length', 'max'=>10),
			array('created_at, updated_at', 'safe'),
			array('employee_identification, created_at, updated_at, user_update_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, seller_name, seller_dni, point_of_sale_address, employee_identification, device_imei, device_brand, device_model, device_price, device_status_id, afip_cai, afip_cae, pdf_uri, created_at, updated_at, user_update_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'seller_name' => Yii::t('app', 'Seller Name'),
			'seller_dni' => Yii::t('app', 'Seller Dni'),
			'point_of_sale_address' => Yii::t('app', 'Point Of Sale Address'),
			'employee_identification' => Yii::t('app', 'Employee Identification'),
			'device_imei' => Yii::t('app', 'Device Imei'),
			'device_brand' => Yii::t('app', 'Device Brand'),
			'device_model' => Yii::t('app', 'Device Model'),
			'device_price' => Yii::t('app', 'Device Price'),
			'device_status_id' => null,
			'afip_cai' => Yii::t('app', 'Afip Cai'),
			'afip_cae' => Yii::t('app', 'Afip Cae'),
			'pdf_uri' => Yii::t('app', 'Pdf Uri'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'user_update_id' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('seller_name', $this->seller_name, true);
		$criteria->compare('seller_dni', $this->seller_dni);
		$criteria->compare('point_of_sale_address', $this->point_of_sale_address, true);
		$criteria->compare('employee_identification', $this->employee_identification, true);
		$criteria->compare('device_imei', $this->device_imei);
		$criteria->compare('device_brand', $this->device_brand, true);
		$criteria->compare('device_model', $this->device_model, true);
		$criteria->compare('device_price', $this->device_price);
		$criteria->compare('device_status_id', $this->device_status_id);
		$criteria->compare('afip_cai', $this->afip_cai);
		$criteria->compare('afip_cae', $this->afip_cae);
		$criteria->compare('pdf_uri', $this->pdf_uri, true);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);
		$criteria->compare('user_update_id', $this->user_update_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

	/**
	*	Autolog some fields if exists
	*
	*
	*/
	public function behaviors()
	{
    	return array(
        	'AutoLogBehavior' => array(
            	'class' => 'application.components.AutoLogBehavior',
            	//You can optionally set the field name options here
        	)
    	);
	}
}